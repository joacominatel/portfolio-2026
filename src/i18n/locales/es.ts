export const es = {
  heroTitle: "Backends que salen a producci√≥n en d√≠as.",
  heroSubtitle:
    "APIs seguras, Postgres y deploys. UTC‚àí3, disponibilidad 30+ h/sem.",
  hireMe: "Contr√°tame",
  viewCaseStudies: "Ver casos reales",
  viewProjects: "Ver proyectos",
  downloadCV: "Descargar CV",
  socialFooter: "Hecho con Next.js, Tailwind y mate üßâ",
  techBarLabel: "Stack clave",
  whatIBuild: "Lo que construyo",
  projects: "Proyectos",
  skills: "Skills",
  contact: "Contacto",
  aboutMe: "Sobre m√≠",
  aboutMeDesc: "Backend (Python) ‚Äì APIs, datos y automatizaci√≥n.",
  restfulApis: "APIs REST bien documentadas",
  restfulDesc: "OpenAPI, versionado y tests.",
  dataAutomation: "Datos & Automatizaci√≥n",
  dataAutomationDesc: "ETL, workers, colas, observabilidad.",
  dataAutomationDetailTitle: "Datos & Automatizaci√≥n",
  dataAutomationDetailIntro:
    "Herramientas y enfoques que disfruto al construir backends con datos y automatizaci√≥n.",
  dataAutomationDetailBody: `Me gusta combinar herramientas pragm√°ticas con runtimes modernos. Python (FastAPI, workers async) al centro por expresividad, y complemento con Go o Node cuando la concurrencia o el streaming necesitan m√°s control.

Para orquestaci√≥n y pipelines: colas simples (Redis / SQS) m√°s schedulers livianos superan la sobre‚Äëingenier√≠a de DAGs en muchos casos. SQL (Postgres / MySQL) como fuente de verdad y Redis o cach√©s s√≥lo donde la latencia realmente importa.

Observabilidad temprano: logs estructurados, trace ids que viajan entre tareas y m√©tricas simples (latencia p95, profundidad de cola) dan ciclos de feedback r√°pidos. Prototipo con Docker Compose y luego contenedores en la nube (Azure / AWS) usando plantillas IaC.

Integraci√≥n con IA: uso LLMs para extraer, validar o resumir‚Äîno como caja negra. Guardrails y fallbacks deterministas mantienen estable el flujo.

Mantengo las cosas simples: menos piezas, contratos claros, comportamientos documentados y ejecuciones reproducibles.`,
  aboutMeBody: `Soy Joaquin (Joaco), backend developer enfocado en Python y en el dise√±o de APIs REST claras, flujos de datos robustos e integraci√≥n con IA. Disfruto convertir problemas difusos en arquitecturas concisas: servicios peque√±os con l√≠mites expl√≠citos, performance predecible y buena observabilidad.

Prefiero dise√±os simples y componibles sobre complejidad de moda: endpoints versionados, contratos tipados, pipelines repetibles, tests √∫tiles. Colaboro en equipo o en proyectos freelance aportando documentaci√≥n, commits limpios, testing en CI y entrega iterativa.

Si necesit√°s a alguien para dise√±ar o reforzar una base backend (APIs, procesamiento de datos, automatizaci√≥n, integraci√≥n IA) con calidad mantenible, hablemos.`,
  seeMore: "ver m√°s",
  projectTeaserTitle: "Proyectos destacados",
  finalCTAText: "Disponible para freelance y colaboraciones.",
  email: "Email",
  restfulDetailTitle: "Well documented RESTful APIs",
  restfulDetailIntro:
    "Dise√±o y desarrollo APIs REST claras, confiables y f√°ciles de evolucionar.",
  restfulDetailBody: `Me gusta trabajar con APIs bien pensadas: recursos definidos con l√≥gica, versionado ordenado y documentaci√≥n OpenAPI que siempre refleja la realidad del proyecto. La idea es que cualquier persona que consuma la API tenga una experiencia predecible, sin sorpresas.

La calidad la aseguro con pruebas de contrato, integraci√≥n y carga, cuidando que cada cambio mantenga la estabilidad. Prefiero la simplicidad: menos endpoints pero mejor dise√±ados, m√°s f√°ciles de mantener y escalar. Si busc√°s alguien que te d√© una base backend s√≥lida y transparente, podemos trabajar juntos.`,
  backToProjects: "Volver a proyectos",
  tagsLabel: "Tags",
  statusDeveloping: "En desarrollo",
  statusActive: "Activo",
  experienceTitle: "Experiencia",
  present: "Actualidad",
  achievementsLabel: "Logros",
  internalProjectsLabel: "Proyectos internos",
  showMore: "Ver m√°s",
  showLess: "Ver menos",
  caseStudiesTitle: "Casos de estudio",
  problem: "Problema",
  solution: "Soluci√≥n",
  impact: "Impacto",
  stack: "Stack",
  repoDemo: "Repo / Demo",
};

export type EsKeys = keyof typeof es;
