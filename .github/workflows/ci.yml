name: CI & Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write

env:
  NEXT_TELEMETRY_DISABLED: 1
  CI: true

jobs:
  build:
    name: Install / Lint / Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Enable corepack (pnpm)
        run: corepack enable

      - name: Show versions
        run: |
          node -v
          corepack pnpm -v || pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Lint (Biome)
        run: pnpm lint

      - name: Build (Next.js)
        run: pnpm build

      - name: Artifact production build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
          retention-days: 7

  deploy:
    name: Deploy (Vercel)
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.vercel.outputs.preview-url || steps.vercel.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack (pnpm)
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install

      - name: Build (Next.js)
        run: pnpm build

      - name: Deploy to Vercel
        id: vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          scope: ${{ secrets.VERCEL_ORG_ID }}
          prod: true
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Output deploy URL
        run: |
          echo "Deployment URL: ${{ steps.vercel.outputs.preview-url || steps.vercel.outputs.url }}"
